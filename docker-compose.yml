version: "3"

services:
    # flask-api server
    hicognition:
        container_name: flask-server
        volumes:
            - ${DATA_DIR}:/code/temp/
        environment:
            - FLASK_DEBUG=0
            - FLASK_APP=/code/hicognition_server.py
            - DATABASE_URL=${DATABASE_URL}
            - SECRET_KEY=${SECRET_KEY}
            - REDIS_URL=${REDIS_URL}
            - UPLOAD_DIR=${UPLOAD_DIR}
            - CHROM_SIZES=${CHROM_SIZES}
            - CHROM_ARMS=${CHROM_ARMS}
            - MAIL_SERVER=${MAIL_SERVER}
            - MAIL_PORT=${MAIL_PORT}
            - MAIL_USERNAME=${MAIL_USERNAME}
            - MAIL_PASSWORD=${MAIL_PASSWORD}
            - MAIL_DEFAULT_SENDER=${MAIL_DEFAULT_SENDER}
            - SECRET_SALT=${SECRET_SALT}
        ports:
            # only map localhost-port
            - "5000:5000"
        build:
            context: "./back_end"
        image: hicognition:latest
        entrypoint: "/bin/bash"
        command: -c "cd /code && ./boot_prod.sh"
        networks:
            hicognition-net:
                ipv4_address: 172.18.0.3

    # nginx server to serve front-end and redirect requests to flask-api
    nginx:
        container_name: hicognition-nginx
        build:
            context: "./nginx"
        ports:
            - "80:80"
        # map front-end files
        depends_on:
            - node
            - hicognition
        volumes:
            - ${DIR_FRONT_END}:/front_end
            - ${DIR_STATIC}:/static
            - ${KEY_DIR}:/keys
            - ${DOC_PATH}:/docs
        networks:
            - hicognition-net

    # container to build front-end
    node:
        container_name: node-builder
        image: node:14-buster
        environment:
            - showcase=false
        volumes:
            - ${DIR_FRONT_END}:/front_end
        entrypoint: 
            - "/bin/bash"
        command: -c "cd /front_end && npm install && npm run build"

    redis-server:
        container_name: redis-server
        build:
            context: "./redis"
        networks:
            hicognition-net:
                ipv4_address: 172.18.0.5
        ports:
            - 6379:6379

    redis-worker-long:
        volumes:  
            - ${DATA_DIR}:/code/temp/
        environment:
            - FLASK_DEBUG=1
            - FLASK_APP=/code/hicognition_server.py
            - SECRET_KEY=${SECRET_KEY}
            - DATABASE_URL=${DATABASE_URL}
            - REDIS_URL=${REDIS_URL}
            - UPLOAD_DIR=${UPLOAD_DIR}
            - CHROM_SIZES=${CHROM_SIZES}
            - CHROM_ARMS=${CHROM_ARMS}
            - MAIL_SERVER=${MAIL_SERVER}
            - MAIL_PORT=${MAIL_PORT}
            - MAIL_USERNAME=${MAIL_USERNAME}
            - MAIL_PASSWORD=${MAIL_PASSWORD}
            - MAIL_DEFAULT_SENDER=${MAIL_DEFAULT_SENDER}
            - SECRET_SALT=${SECRET_SALT}
        depends_on:
                - redis-server
        build:
            context: "./back_end"
        scale: 3
        image: hicognition:latest
        entrypoint: "/bin/bash"
        networks:
            - hicognition-net
        # sleeps to wait for redis-server. TODO: make this check nicer!
        command: -c "sleep 5 && cd /code/ && rq worker -u ${REDIS_URL} hicognition-tasks-long"

    redis-worker-medium:
        volumes:  
            - ${DATA_DIR}:/code/temp/
        environment:
            - FLASK_DEBUG=1
            - FLASK_APP=/code/hicognition_server.py
            - SECRET_KEY=${SECRET_KEY}
            - DATABASE_URL=${DATABASE_URL}
            - REDIS_URL=${REDIS_URL}
            - UPLOAD_DIR=${UPLOAD_DIR}
            - CHROM_SIZES=${CHROM_SIZES}
            - CHROM_ARMS=${CHROM_ARMS}
            - MAIL_SERVER=${MAIL_SERVER}
            - MAIL_PORT=${MAIL_PORT}
            - MAIL_USERNAME=${MAIL_USERNAME}
            - MAIL_PASSWORD=${MAIL_PASSWORD}
            - MAIL_DEFAULT_SENDER=${MAIL_DEFAULT_SENDER}
            - SECRET_SALT=${SECRET_SALT}
        depends_on:
                - redis-server
        build:
            context: "./back_end"
        scale: 10
        image: hicognition:latest
        entrypoint: "/bin/bash"
        networks:
            - hicognition-net
        # sleeps to wait for redis-server. TODO: make this check nicer!
        command: -c "sleep 5 && cd /code/ && rq worker -u ${REDIS_URL} hicognition-tasks-medium"

    redis-worker-short:
        volumes:  
            - ${DATA_DIR}:/code/temp/
        environment:
            - FLASK_DEBUG=1
            - FLASK_APP=/code/hicognition_server.py
            - SECRET_KEY=${SECRET_KEY}
            - DATABASE_URL=${DATABASE_URL}
            - REDIS_URL=${REDIS_URL}
            - UPLOAD_DIR=${UPLOAD_DIR}
            - CHROM_SIZES=${CHROM_SIZES}
            - CHROM_ARMS=${CHROM_ARMS}
            - MAIL_SERVER=${MAIL_SERVER}
            - MAIL_PORT=${MAIL_PORT}
            - MAIL_USERNAME=${MAIL_USERNAME}
            - MAIL_PASSWORD=${MAIL_PASSWORD}
            - MAIL_DEFAULT_SENDER=${MAIL_DEFAULT_SENDER}
            - SECRET_SALT=${SECRET_SALT}
        depends_on:
                - redis-server
        build:
            context: "./back_end"
        scale: 3
        image: hicognition:latest
        entrypoint: "/bin/bash"
        networks:
            - hicognition-net
        # sleeps to wait for redis-server. TODO: make this check nicer!
        command: -c "sleep 5 && cd /code/ && rq worker -u ${REDIS_URL} hicognition-tasks-short"

    mysql:
        container_name: mysql
        ports:
            # map port out for diagnostics
            - "3306:3306"
        environment:
            - MYSQL_RANDOM_ROOT_PASSWORD=yes
            - MYSQL_DATABASE=hicognition
            - MYSQL_USER=hicognition
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        image: mysql/mysql-server:8.0
        volumes:
            - ${MYSQL_DATA_DIR}:/var/lib/mysql
            - ./mysql/mysql.cnf:/etc/my.cnf
            - ${MYSQL_BACKUP_DIR}:/backups
        networks:
            hicognition-net:
                ipv4_address: 172.18.0.9

    hugo-builder:
        container_name: hugo-builder
        image: klakegg/hugo
        volumes:
            - ${DOC_PATH}:/doc
        entrypoint: "/bin/sh"
        command: -c "[ ! -d /doc/public ] || rm -r /doc/public && cd /doc && hugo"

networks:
    hicognition-net:
        ipam:
            driver: default
            config:
                - subnet: 172.18.0.0/16