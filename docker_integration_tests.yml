version: "3"

services:
    node:
        container_name: node
        image: node:14-buster
        ports:
            # only map localhost-port
            - "8080:8080"
        volumes:
            - ${DIR_FRONT_END}:/front_end
        entrypoint: 
            - "/bin/bash"
        command: -c "cd /front_end && npm install && npm run dev"

    hicognition:
        container_name: flask-server
        volumes:  
            - ${HICOGNITION_DIR}:/code
        environment:
            - FLASK_DEBUG=1
            - FLASK_APP=/code/hicognition_server.py
            - DATABASE_URL=${DATABASE_URL}
            - REDIS_URL=${REDIS_URL}
            - UPLOAD_DIR=${UPLOAD_DIR}
            - CHROM_SIZES=${CHROM_SIZES}
            - CHROM_ARMS=${CHROM_ARMS}
        ports:
            # only map localhost-port
            - "5000:5000"
        build:
            context: "./back_end"
        image: flask:v1.0
        entrypoint: "/bin/bash"
        networks:
            hicognition-net:
                ipv4_address: 172.18.0.3
        command: -c "cd /code && ./boot.sh"


    redis-server:
        container_name: redis-server
        build:
            context: "./redis"
        networks:
            hicognition-net:
                ipv4_address: 172.18.0.4
        ports:
            - 6379:6379

    redis-worker:
        container_name: redis-worker
        volumes:  
            - ${HICOGNITION_DIR}:/code
        environment:
            - FLASK_DEBUG=1
            - FLASK_APP=/code/hicognition_server.py
            - DATABASE_URL=${DATABASE_URL}
            - REDIS_URL=${REDIS_URL}
            - UPLOAD_DIR=${UPLOAD_DIR}
            - CHROM_SIZES=${CHROM_SIZES}
            - CHROM_ARMS=${CHROM_ARMS}
        depends_on:
                - redis-server
        build:
            context: "./back_end"
        image: flask:v1.0
        entrypoint: "/bin/bash"
        networks:
            hicognition-net:
                ipv4_address: 172.18.0.5
        # sleeps to wait for redis-server. TODO: make this check nicer!
        command: -c "sleep 5 && cd /code/ && rq worker -u ${REDIS_URL} hicognition-tasks"

    redis-worker2:
        container_name: redis-worker2
        volumes:  
            - ${HICOGNITION_DIR}:/code
        environment:
            - FLASK_DEBUG=1
            - FLASK_APP=/code/hicognition_server.py
            - DATABASE_URL=${DATABASE_URL}
            - REDIS_URL=${REDIS_URL}
            - UPLOAD_DIR=${UPLOAD_DIR}
            - CHROM_SIZES=${CHROM_SIZES}
            - CHROM_ARMS=${CHROM_ARMS}
        depends_on:
                - redis-server
        build:
            context: "./back_end"
        image: flask:v1.0
        entrypoint: "/bin/bash"
        networks:
            hicognition-net:
                ipv4_address: 172.18.0.6
        # sleeps to wait for redis-server. TODO: make this check nicer!
        command: -c "sleep 5 && cd /code/ && rq worker -u ${REDIS_URL} hicognition-tasks"

    mysql:
        container_name: mysql
        ports:
            # map port out for diagnostics
            - "3306:3306"
        environment:
            - MYSQL_RANDOM_ROOT_PASSWORD=yes
            - MYSQL_DATABASE=hicognition
            - MYSQL_USER=hicognition
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        image: mysql/mysql-server:8.0
        volumes:
            - ./mysql/mysql.cnf:/etc/my.cnf
        networks:
            hicognition-net:
                ipv4_address: 172.18.0.9

    # Cypress container
    cypress:
      container_name: cypress
      build:
          context: "./front_end/e2e"
      environment:
        # pass base url to test pointing at the web application
        - CYPRESS_baseUrl=http://node:8080
      # share the current folder as volume to avoid copying
      working_dir: /e2e
      volumes:
        - ${INTEGRATION_TESTS}:/e2e
      command: -c "./init.sh"


networks:
    hicognition-net:
        ipam:
            driver: default
            config:
                - subnet: 172.18.0.0/16