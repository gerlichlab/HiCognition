"""added del cascade to dataset associated fks

Revision ID: 77e120ffdad7
Revises: 1018ea6830a5
Create Date: 2022-10-31 15:37:00.527177

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '77e120ffdad7'
down_revision = '1018ea6830a5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('association_interval_data_ibfk_2', 'association_interval_data', type_='foreignkey')
    op.drop_constraint('association_interval_data_ibfk_1', 'association_interval_data', type_='foreignkey')
    op.create_foreign_key('fk_associationivd_collection', 'association_interval_data', 'collection', ['collection_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'association_interval_data', 'intervals', ['intervals_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('average_interval_data_ibfk_1', 'average_interval_data', type_='foreignkey')
    op.drop_constraint('average_interval_data_ibfk_2', 'average_interval_data', type_='foreignkey')
    op.create_foreign_key('fk_averageivd_dataset', 'average_interval_data', 'dataset', ['dataset_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'average_interval_data', 'intervals', ['intervals_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('collections_failed_table_ibfk_1', 'collections_failed_table', type_='foreignkey')
    op.drop_constraint('collections_failed_table_ibfk_2', 'collections_failed_table', type_='foreignkey')
    op.create_foreign_key(None, 'collections_failed_table', 'dataset', ['dataset_region'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'collections_failed_table', 'collection', ['collection_feature'], ['id'], ondelete='CASCADE')
    op.drop_constraint('collections_preprocessing_table_ibfk_1', 'collections_preprocessing_table', type_='foreignkey')
    op.drop_constraint('collections_preprocessing_table_ibfk_2', 'collections_preprocessing_table', type_='foreignkey')
    op.create_foreign_key(None, 'collections_preprocessing_table', 'dataset', ['dataset_region'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'collections_preprocessing_table', 'collection', ['collection_feature'], ['id'], ondelete='CASCADE')
    op.alter_column('dataset', 'filetype',
               existing_type=mysql.VARCHAR(length=64),
               nullable=False)
    op.drop_constraint('dataset_collection_assoc_table_ibfk_2', 'dataset_collection_assoc_table', type_='foreignkey')
    op.drop_constraint('dataset_collection_assoc_table_ibfk_1', 'dataset_collection_assoc_table', type_='foreignkey')
    op.create_foreign_key(None, 'dataset_collection_assoc_table', 'dataset', ['dataset_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'dataset_collection_assoc_table', 'collection', ['collection_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('dataset_completed_table_ibfk_2', 'dataset_completed_table', type_='foreignkey')
    op.drop_constraint('dataset_completed_table_ibfk_1', 'dataset_completed_table', type_='foreignkey')
    op.create_foreign_key(None, 'dataset_completed_table', 'dataset', ['dataset_feature'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'dataset_completed_table', 'dataset', ['dataset_region'], ['id'], ondelete='CASCADE')
    op.drop_constraint('dataset_dataset_preprocessing_table_ibfk_1', 'dataset_dataset_preprocessing_table', type_='foreignkey')
    op.drop_constraint('dataset_dataset_preprocessing_table_ibfk_2', 'dataset_dataset_preprocessing_table', type_='foreignkey')
    op.create_foreign_key(None, 'dataset_dataset_preprocessing_table', 'dataset', ['dataset_feature'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'dataset_dataset_preprocessing_table', 'dataset', ['dataset_region'], ['id'], ondelete='CASCADE')
    op.drop_constraint('dataset_failed_table_ibfk_1', 'dataset_failed_table', type_='foreignkey')
    op.drop_constraint('dataset_failed_table_ibfk_2', 'dataset_failed_table', type_='foreignkey')
    op.create_foreign_key(None, 'dataset_failed_table', 'dataset', ['dataset_region'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'dataset_failed_table', 'dataset', ['dataset_feature'], ['id'], ondelete='CASCADE')
    op.drop_constraint('embedding_interval_data_ibfk_2', 'embedding_interval_data', type_='foreignkey')
    op.drop_constraint('embedding_interval_data_ibfk_1', 'embedding_interval_data', type_='foreignkey')
    op.drop_constraint('embedding_interval_data_ibfk_3', 'embedding_interval_data', type_='foreignkey')
    op.create_foreign_key('fk_embeddingivd_dataset', 'embedding_interval_data', 'dataset', ['dataset_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'embedding_interval_data', 'intervals', ['intervals_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_embeddingivd_collection', 'embedding_interval_data', 'collection', ['collection_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('individual_interval_data_ibfk_1', 'individual_interval_data', type_='foreignkey')
    op.drop_constraint('individual_interval_data_ibfk_2', 'individual_interval_data', type_='foreignkey')
    op.create_foreign_key('fk_individualivd_dataset', 'individual_interval_data', 'dataset', ['dataset_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'individual_interval_data', 'intervals', ['intervals_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('intervals_ibfk_1', 'intervals', type_='foreignkey')
    op.create_foreign_key(None, 'intervals', 'dataset', ['dataset_id'], ['id'], ondelete='CASCADE')
    op.alter_column('session', 'session_object',
               existing_type=mysql.LONGTEXT(),
               type_=sa.Text(length=1000000000),
               existing_nullable=True)
    op.drop_constraint('session_collection_assoc_table_ibfk_1', 'session_collection_assoc_table', type_='foreignkey')
    op.drop_constraint('session_collection_assoc_table_ibfk_2', 'session_collection_assoc_table', type_='foreignkey')
    op.create_foreign_key(None, 'session_collection_assoc_table', 'session', ['session_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'session_collection_assoc_table', 'collection', ['collection_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('session_dataset_assoc_table_ibfk_2', 'session_dataset_assoc_table', type_='foreignkey')
    op.drop_constraint('session_dataset_assoc_table_ibfk_1', 'session_dataset_assoc_table', type_='foreignkey')
    op.create_foreign_key(None, 'session_dataset_assoc_table', 'session', ['session_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'session_dataset_assoc_table', 'dataset', ['dataset_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'session_dataset_assoc_table', type_='foreignkey')
    op.drop_constraint(None, 'session_dataset_assoc_table', type_='foreignkey')
    op.create_foreign_key('session_dataset_assoc_table_ibfk_1', 'session_dataset_assoc_table', 'dataset', ['dataset_id'], ['id'])
    op.create_foreign_key('session_dataset_assoc_table_ibfk_2', 'session_dataset_assoc_table', 'session', ['session_id'], ['id'])
    op.drop_constraint(None, 'session_collection_assoc_table', type_='foreignkey')
    op.drop_constraint(None, 'session_collection_assoc_table', type_='foreignkey')
    op.create_foreign_key('session_collection_assoc_table_ibfk_2', 'session_collection_assoc_table', 'session', ['session_id'], ['id'])
    op.create_foreign_key('session_collection_assoc_table_ibfk_1', 'session_collection_assoc_table', 'collection', ['collection_id'], ['id'])
    op.alter_column('session', 'session_object',
               existing_type=sa.Text(length=1000000000),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
    op.drop_constraint(None, 'intervals', type_='foreignkey')
    op.create_foreign_key('intervals_ibfk_1', 'intervals', 'dataset', ['dataset_id'], ['id'])
    op.drop_constraint(None, 'individual_interval_data', type_='foreignkey')
    op.drop_constraint('fk_individualivd_dataset', 'individual_interval_data', type_='foreignkey')
    op.create_foreign_key('individual_interval_data_ibfk_2', 'individual_interval_data', 'intervals', ['intervals_id'], ['id'])
    op.create_foreign_key('individual_interval_data_ibfk_1', 'individual_interval_data', 'dataset', ['dataset_id'], ['id'])
    op.drop_constraint('fk_embeddingivd_collection', 'embedding_interval_data', type_='foreignkey')
    op.drop_constraint(None, 'embedding_interval_data', type_='foreignkey')
    op.drop_constraint('fk_embeddingivd_dataset', 'embedding_interval_data', type_='foreignkey')
    op.create_foreign_key('embedding_interval_data_ibfk_3', 'embedding_interval_data', 'dataset', ['dataset_id'], ['id'])
    op.create_foreign_key('embedding_interval_data_ibfk_1', 'embedding_interval_data', 'collection', ['collection_id'], ['id'])
    op.create_foreign_key('embedding_interval_data_ibfk_2', 'embedding_interval_data', 'intervals', ['intervals_id'], ['id'])
    op.drop_constraint(None, 'dataset_failed_table', type_='foreignkey')
    op.drop_constraint(None, 'dataset_failed_table', type_='foreignkey')
    op.create_foreign_key('dataset_failed_table_ibfk_2', 'dataset_failed_table', 'dataset', ['dataset_region'], ['id'])
    op.create_foreign_key('dataset_failed_table_ibfk_1', 'dataset_failed_table', 'dataset', ['dataset_feature'], ['id'])
    op.drop_constraint(None, 'dataset_dataset_preprocessing_table', type_='foreignkey')
    op.drop_constraint(None, 'dataset_dataset_preprocessing_table', type_='foreignkey')
    op.create_foreign_key('dataset_dataset_preprocessing_table_ibfk_2', 'dataset_dataset_preprocessing_table', 'dataset', ['dataset_region'], ['id'])
    op.create_foreign_key('dataset_dataset_preprocessing_table_ibfk_1', 'dataset_dataset_preprocessing_table', 'dataset', ['dataset_feature'], ['id'])
    op.drop_constraint(None, 'dataset_completed_table', type_='foreignkey')
    op.drop_constraint(None, 'dataset_completed_table', type_='foreignkey')
    op.create_foreign_key('dataset_completed_table_ibfk_1', 'dataset_completed_table', 'dataset', ['dataset_feature'], ['id'])
    op.create_foreign_key('dataset_completed_table_ibfk_2', 'dataset_completed_table', 'dataset', ['dataset_region'], ['id'])
    op.drop_constraint(None, 'dataset_collection_assoc_table', type_='foreignkey')
    op.drop_constraint(None, 'dataset_collection_assoc_table', type_='foreignkey')
    op.create_foreign_key('dataset_collection_assoc_table_ibfk_1', 'dataset_collection_assoc_table', 'collection', ['collection_id'], ['id'])
    op.create_foreign_key('dataset_collection_assoc_table_ibfk_2', 'dataset_collection_assoc_table', 'dataset', ['dataset_id'], ['id'])
    op.alter_column('dataset', 'filetype',
               existing_type=mysql.VARCHAR(length=64),
               nullable=True)
    op.drop_constraint(None, 'collections_preprocessing_table', type_='foreignkey')
    op.drop_constraint(None, 'collections_preprocessing_table', type_='foreignkey')
    op.create_foreign_key('collections_preprocessing_table_ibfk_2', 'collections_preprocessing_table', 'dataset', ['dataset_region'], ['id'])
    op.create_foreign_key('collections_preprocessing_table_ibfk_1', 'collections_preprocessing_table', 'collection', ['collection_feature'], ['id'])
    op.drop_constraint(None, 'collections_failed_table', type_='foreignkey')
    op.drop_constraint(None, 'collections_failed_table', type_='foreignkey')
    op.create_foreign_key('collections_failed_table_ibfk_2', 'collections_failed_table', 'dataset', ['dataset_region'], ['id'])
    op.create_foreign_key('collections_failed_table_ibfk_1', 'collections_failed_table', 'collection', ['collection_feature'], ['id'])
    op.drop_constraint(None, 'average_interval_data', type_='foreignkey')
    op.drop_constraint('fk_averageivd_dataset', 'average_interval_data', type_='foreignkey')
    op.create_foreign_key('average_interval_data_ibfk_2', 'average_interval_data', 'intervals', ['intervals_id'], ['id'])
    op.create_foreign_key('average_interval_data_ibfk_1', 'average_interval_data', 'dataset', ['dataset_id'], ['id'])
    op.drop_constraint(None, 'association_interval_data', type_='foreignkey')
    op.drop_constraint('fk_associationivd_collection', 'association_interval_data', type_='foreignkey')
    op.create_foreign_key('association_interval_data_ibfk_1', 'association_interval_data', 'collection', ['collection_id'], ['id'])
    op.create_foreign_key('association_interval_data_ibfk_2', 'association_interval_data', 'intervals', ['intervals_id'], ['id'])
    # ### end Alembic commands ###
