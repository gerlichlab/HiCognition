"""added sprint10-bedpe

Revision ID: a863b31577d3
Revises: 7d4e79340fc1
Create Date: 2023-01-08 15:25:44.548537

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'a863b31577d3'
down_revision = '7d4e79340fc1'
branch_labels = None
depends_on = None


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('repository',
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('url', sa.String(length=512), nullable=True),
    sa.Column('file_url', sa.String(length=512), nullable=True),
    sa.Column('auth_required', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('repository_auth',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('repository_name', sa.String(length=64), nullable=False),
    sa.Column('key', sa.String(length=512), nullable=False),
    sa.Column('secret', sa.String(length=512), nullable=False),
    sa.ForeignKeyConstraint(['repository_name'], ['repository.name'], name='fk_repoauth_repo'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_repoauth_user'),
    sa.PrimaryKeyConstraint('user_id', 'repository_name')
    )
    op.drop_table('user__data_repository__credentials')
    # change foreign key constraint
    op.drop_constraint('dataset_ibfk_3', 'dataset', type="foreignkey")
    op.drop_table('data_repository')
    op.add_column('association_interval_data', sa.Column('job_status', sa.String(length=64), nullable=True))
    op.drop_constraint('association_interval_data_ibfk_1', 'association_interval_data', type_='foreignkey')
    op.drop_constraint('association_interval_data_ibfk_2', 'association_interval_data', type_='foreignkey')
    op.create_foreign_key(None, 'association_interval_data', 'intervals', ['intervals_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_associationivd_collection', 'association_interval_data', 'collection', ['collection_id'], ['id'], ondelete='CASCADE')
    op.add_column('average_interval_data', sa.Column('job_status', sa.String(length=64), nullable=True))
    op.drop_constraint('average_interval_data_ibfk_2', 'average_interval_data', type_='foreignkey')
    op.drop_constraint('average_interval_data_ibfk_1', 'average_interval_data', type_='foreignkey')
    op.create_foreign_key('fk_averageivd_dataset', 'average_interval_data', 'dataset', ['dataset_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'average_interval_data', 'intervals', ['intervals_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('collections_failed_table_ibfk_2', 'collections_failed_table', type_='foreignkey')
    op.drop_constraint('collections_failed_table_ibfk_1', 'collections_failed_table', type_='foreignkey')
    op.create_foreign_key(None, 'collections_failed_table', 'collection', ['collection_feature'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'collections_failed_table', 'dataset', ['dataset_region'], ['id'], ondelete='CASCADE')
    op.drop_constraint('collections_preprocessing_table_ibfk_1', 'collections_preprocessing_table', type_='foreignkey')
    op.drop_constraint('collections_preprocessing_table_ibfk_2', 'collections_preprocessing_table', type_='foreignkey')
    op.create_foreign_key(None, 'collections_preprocessing_table', 'collection', ['collection_feature'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'collections_preprocessing_table', 'dataset', ['dataset_region'], ['id'], ondelete='CASCADE')
    op.add_column('dataset', sa.Column('metadata_json', sa.JSON(), nullable=True))
    op.add_column('dataset', sa.Column('upload_state', sa.String(length=64), nullable=False))
    op.alter_column('dataset', 'dataset_name',
               existing_type=mysql.VARCHAR(length=512),
               nullable=False)
    op.alter_column('dataset', 'filetype',
               existing_type=mysql.VARCHAR(length=64),
               nullable=False)
    op.alter_column('dataset', 'public',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False)
    op.alter_column('dataset', 'user_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.drop_index('ix_dataset_dataset_name', table_name='dataset')
    op.drop_index('ix_dataset_file_path', table_name='dataset')
    op.drop_index('ix_dataset_filetype', table_name='dataset')
    op.create_foreign_key('fk_dataset_repository', 'dataset', 'repository', ['repository_name'], ['name'])
    op.drop_constraint('dataset_collection_assoc_table_ibfk_2', 'dataset_collection_assoc_table', type_='foreignkey')
    op.drop_constraint('dataset_collection_assoc_table_ibfk_1', 'dataset_collection_assoc_table', type_='foreignkey')
    op.create_foreign_key(None, 'dataset_collection_assoc_table', 'collection', ['collection_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'dataset_collection_assoc_table', 'dataset', ['dataset_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('dataset_completed_table_ibfk_2', 'dataset_completed_table', type_='foreignkey')
    op.drop_constraint('dataset_completed_table_ibfk_1', 'dataset_completed_table', type_='foreignkey')
    op.create_foreign_key(None, 'dataset_completed_table', 'dataset', ['dataset_feature'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'dataset_completed_table', 'dataset', ['dataset_region'], ['id'], ondelete='CASCADE')
    op.drop_constraint('dataset_dataset_preprocessing_table_ibfk_1', 'dataset_dataset_preprocessing_table', type_='foreignkey')
    op.drop_constraint('dataset_dataset_preprocessing_table_ibfk_2', 'dataset_dataset_preprocessing_table', type_='foreignkey')
    op.create_foreign_key(None, 'dataset_dataset_preprocessing_table', 'dataset', ['dataset_feature'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'dataset_dataset_preprocessing_table', 'dataset', ['dataset_region'], ['id'], ondelete='CASCADE')
    op.drop_constraint('dataset_failed_table_ibfk_2', 'dataset_failed_table', type_='foreignkey')
    op.drop_constraint('dataset_failed_table_ibfk_1', 'dataset_failed_table', type_='foreignkey')
    op.create_foreign_key(None, 'dataset_failed_table', 'dataset', ['dataset_region'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'dataset_failed_table', 'dataset', ['dataset_feature'], ['id'], ondelete='CASCADE')
    op.add_column('embedding_interval_data', sa.Column('job_status', sa.String(length=64), nullable=True))
    op.drop_constraint('embedding_interval_data_ibfk_3', 'embedding_interval_data', type_='foreignkey')
    op.drop_constraint('embedding_interval_data_ibfk_1', 'embedding_interval_data', type_='foreignkey')
    op.drop_constraint('embedding_interval_data_ibfk_2', 'embedding_interval_data', type_='foreignkey')
    op.create_foreign_key('fk_embeddingivd_collection', 'embedding_interval_data', 'collection', ['collection_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'embedding_interval_data', 'intervals', ['intervals_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_embeddingivd_dataset', 'embedding_interval_data', 'dataset', ['dataset_id'], ['id'], ondelete='CASCADE')
    op.add_column('individual_interval_data', sa.Column('job_status', sa.String(length=64), nullable=True))
    op.add_column('individual_interval_data', sa.Column('value_type', sa.String(length=64), nullable=True))
    op.drop_constraint('individual_interval_data_ibfk_1', 'individual_interval_data', type_='foreignkey')
    op.drop_constraint('individual_interval_data_ibfk_2', 'individual_interval_data', type_='foreignkey')
    op.create_foreign_key(None, 'individual_interval_data', 'intervals', ['intervals_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_individualivd_dataset', 'individual_interval_data', 'dataset', ['dataset_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('intervals_ibfk_1', 'intervals', type_='foreignkey')
    op.create_foreign_key(None, 'intervals', 'dataset', ['dataset_id'], ['id'], ondelete='CASCADE')
    op.alter_column('session', 'session_object',
               existing_type=mysql.LONGTEXT(),
               type_=sa.Text(length=1000000000),
               existing_nullable=True)
    op.drop_constraint('session_collection_assoc_table_ibfk_2', 'session_collection_assoc_table', type_='foreignkey')
    op.drop_constraint('session_collection_assoc_table_ibfk_1', 'session_collection_assoc_table', type_='foreignkey')
    op.create_foreign_key(None, 'session_collection_assoc_table', 'collection', ['collection_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'session_collection_assoc_table', 'session', ['session_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('session_dataset_assoc_table_ibfk_2', 'session_dataset_assoc_table', type_='foreignkey')
    op.drop_constraint('session_dataset_assoc_table_ibfk_1', 'session_dataset_assoc_table', type_='foreignkey')
    op.create_foreign_key(None, 'session_dataset_assoc_table', 'session', ['session_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'session_dataset_assoc_table', 'dataset', ['dataset_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'session_dataset_assoc_table', type_='foreignkey')
    op.drop_constraint(None, 'session_dataset_assoc_table', type_='foreignkey')
    op.create_foreign_key('session_dataset_assoc_table_ibfk_1', 'session_dataset_assoc_table', 'dataset', ['dataset_id'], ['id'])
    op.create_foreign_key('session_dataset_assoc_table_ibfk_2', 'session_dataset_assoc_table', 'session', ['session_id'], ['id'])
    op.drop_constraint(None, 'session_collection_assoc_table', type_='foreignkey')
    op.drop_constraint(None, 'session_collection_assoc_table', type_='foreignkey')
    op.create_foreign_key('session_collection_assoc_table_ibfk_1', 'session_collection_assoc_table', 'collection', ['collection_id'], ['id'])
    op.create_foreign_key('session_collection_assoc_table_ibfk_2', 'session_collection_assoc_table', 'session', ['session_id'], ['id'])
    op.alter_column('session', 'session_object',
               existing_type=sa.Text(length=1000000000),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
    op.drop_constraint(None, 'intervals', type_='foreignkey')
    op.create_foreign_key('intervals_ibfk_1', 'intervals', 'dataset', ['dataset_id'], ['id'])
    op.drop_constraint('fk_individualivd_dataset', 'individual_interval_data', type_='foreignkey')
    op.drop_constraint(None, 'individual_interval_data', type_='foreignkey')
    op.create_foreign_key('individual_interval_data_ibfk_2', 'individual_interval_data', 'intervals', ['intervals_id'], ['id'])
    op.create_foreign_key('individual_interval_data_ibfk_1', 'individual_interval_data', 'dataset', ['dataset_id'], ['id'])
    op.drop_column('individual_interval_data', 'value_type')
    op.drop_column('individual_interval_data', 'job_status')
    op.drop_constraint('fk_embeddingivd_dataset', 'embedding_interval_data', type_='foreignkey')
    op.drop_constraint(None, 'embedding_interval_data', type_='foreignkey')
    op.drop_constraint('fk_embeddingivd_collection', 'embedding_interval_data', type_='foreignkey')
    op.create_foreign_key('embedding_interval_data_ibfk_2', 'embedding_interval_data', 'intervals', ['intervals_id'], ['id'])
    op.create_foreign_key('embedding_interval_data_ibfk_1', 'embedding_interval_data', 'collection', ['collection_id'], ['id'])
    op.create_foreign_key('embedding_interval_data_ibfk_3', 'embedding_interval_data', 'dataset', ['dataset_id'], ['id'])
    op.drop_column('embedding_interval_data', 'job_status')
    op.drop_constraint(None, 'dataset_failed_table', type_='foreignkey')
    op.drop_constraint(None, 'dataset_failed_table', type_='foreignkey')
    op.create_foreign_key('dataset_failed_table_ibfk_1', 'dataset_failed_table', 'dataset', ['dataset_feature'], ['id'])
    op.create_foreign_key('dataset_failed_table_ibfk_2', 'dataset_failed_table', 'dataset', ['dataset_region'], ['id'])
    op.drop_constraint(None, 'dataset_dataset_preprocessing_table', type_='foreignkey')
    op.drop_constraint(None, 'dataset_dataset_preprocessing_table', type_='foreignkey')
    op.create_foreign_key('dataset_dataset_preprocessing_table_ibfk_2', 'dataset_dataset_preprocessing_table', 'dataset', ['dataset_region'], ['id'])
    op.create_foreign_key('dataset_dataset_preprocessing_table_ibfk_1', 'dataset_dataset_preprocessing_table', 'dataset', ['dataset_feature'], ['id'])
    op.drop_constraint(None, 'dataset_completed_table', type_='foreignkey')
    op.drop_constraint(None, 'dataset_completed_table', type_='foreignkey')
    op.create_foreign_key('dataset_completed_table_ibfk_1', 'dataset_completed_table', 'dataset', ['dataset_feature'], ['id'])
    op.create_foreign_key('dataset_completed_table_ibfk_2', 'dataset_completed_table', 'dataset', ['dataset_region'], ['id'])
    op.drop_constraint(None, 'dataset_collection_assoc_table', type_='foreignkey')
    op.drop_constraint(None, 'dataset_collection_assoc_table', type_='foreignkey')
    op.create_foreign_key('dataset_collection_assoc_table_ibfk_1', 'dataset_collection_assoc_table', 'collection', ['collection_id'], ['id'])
    op.create_foreign_key('dataset_collection_assoc_table_ibfk_2', 'dataset_collection_assoc_table', 'dataset', ['dataset_id'], ['id'])
    op.drop_constraint('fk_dataset_repository', 'dataset', type_='foreignkey')
    op.create_foreign_key('dataset_ibfk_3', 'dataset', 'data_repository', ['repository_name'], ['name'])
    op.create_index('ix_dataset_filetype', 'dataset', ['filetype'], unique=False)
    op.create_index('ix_dataset_file_path', 'dataset', ['file_path'], unique=False)
    op.create_index('ix_dataset_dataset_name', 'dataset', ['dataset_name'], unique=False)
    op.alter_column('dataset', 'user_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.alter_column('dataset', 'public',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True)
    op.alter_column('dataset', 'filetype',
               existing_type=mysql.VARCHAR(length=64),
               nullable=True)
    op.alter_column('dataset', 'dataset_name',
               existing_type=mysql.VARCHAR(length=512),
               nullable=True)
    op.drop_column('dataset', 'upload_state')
    op.drop_column('dataset', 'metadata_json')
    op.drop_constraint(None, 'collections_preprocessing_table', type_='foreignkey')
    op.drop_constraint(None, 'collections_preprocessing_table', type_='foreignkey')
    op.create_foreign_key('collections_preprocessing_table_ibfk_2', 'collections_preprocessing_table', 'dataset', ['dataset_region'], ['id'])
    op.create_foreign_key('collections_preprocessing_table_ibfk_1', 'collections_preprocessing_table', 'collection', ['collection_feature'], ['id'])
    op.drop_constraint(None, 'collections_failed_table', type_='foreignkey')
    op.drop_constraint(None, 'collections_failed_table', type_='foreignkey')
    op.create_foreign_key('collections_failed_table_ibfk_1', 'collections_failed_table', 'collection', ['collection_feature'], ['id'])
    op.create_foreign_key('collections_failed_table_ibfk_2', 'collections_failed_table', 'dataset', ['dataset_region'], ['id'])
    op.drop_constraint(None, 'average_interval_data', type_='foreignkey')
    op.drop_constraint('fk_averageivd_dataset', 'average_interval_data', type_='foreignkey')
    op.create_foreign_key('average_interval_data_ibfk_1', 'average_interval_data', 'dataset', ['dataset_id'], ['id'])
    op.create_foreign_key('average_interval_data_ibfk_2', 'average_interval_data', 'intervals', ['intervals_id'], ['id'])
    op.drop_column('average_interval_data', 'job_status')
    op.drop_constraint('fk_associationivd_collection', 'association_interval_data', type_='foreignkey')
    op.drop_constraint(None, 'association_interval_data', type_='foreignkey')
    op.create_foreign_key('association_interval_data_ibfk_2', 'association_interval_data', 'intervals', ['intervals_id'], ['id'])
    op.create_foreign_key('association_interval_data_ibfk_1', 'association_interval_data', 'collection', ['collection_id'], ['id'])
    op.drop_column('association_interval_data', 'job_status')
    op.create_table('user__data_repository__credentials',
    sa.Column('user_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('repository_name', mysql.VARCHAR(length=64), nullable=False),
    sa.Column('key', mysql.VARCHAR(length=512), nullable=False),
    sa.Column('secret', mysql.VARCHAR(length=512), nullable=False),
    sa.ForeignKeyConstraint(['repository_name'], ['data_repository.name'], name='user__data_repository__credentials_ibfk_1'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='user__data_repository__credentials_ibfk_2'),
    sa.PrimaryKeyConstraint('user_id', 'repository_name'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('data_repository',
    sa.Column('name', mysql.VARCHAR(length=64), nullable=False),
    sa.Column('url', mysql.VARCHAR(length=512), nullable=True),
    sa.Column('file_url', mysql.VARCHAR(length=512), nullable=True),
    sa.Column('auth_required', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True),
    sa.CheckConstraint('(`auth_required` in (0,1))', name='data_repository_chk_1'),
    sa.PrimaryKeyConstraint('name'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.drop_table('repository_auth')
    op.drop_table('repository')
    # ### end Alembic commands ###
